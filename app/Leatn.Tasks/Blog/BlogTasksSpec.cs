// -------------------------------------------------------------------------------------------------
// <auto-generated>    
//  Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
// -------------------------------------------------------------------------------------------------
namespace Leatn.Tasks.Blogs
{
    using System.Collections.Generic;
    using System.Linq;

    using Blog;

    using Domain.Blog;
    using Domain.Blog.BlogPost;
    using Domain.Contracts.Repositories;
    using Domain.Contracts.Specifications;
    using Domain.Contracts.Tasks;
    using Domain.Shared;

    using Factories.Contracts;

    using Framework.Contracts.Specifications;

    using Machine.Specifications;
    using Machine.Specifications.AutoMocking.Rhino;

    using Rhino.Mocks;

    using Web.Mvc.Caching.Contracts;

    public abstract class context_for_blog_tasks : Specification<IBlogTasks, BlogTasks>
    {
        protected static IBlogRepository blog_repository;

        protected static IBlogSpecificationFactory blog_specification_factory;

        protected static ICachingProvider caching_provider;

        private Establish context = () =>
            {
                blog_repository = DependencyOf<IBlogRepository>();
                blog_specification_factory = DependencyOf<IBlogSpecificationFactory>();
                caching_provider = DependencyOf<ICachingProvider>();
            };
    }

    public class when_the_blog_tasks_is_asked_to_get_latest_blogs : context_for_blog_tasks
    {
        static IQueryable<Blog> the_latest_blogs;

        static IEnumerable<Blog> result;

        static ILinqSpecification<Blog> the_latest_blogs_specification;

        Establish context = () =>
            {
                the_latest_blogs_specification = new AdHocSpecification<Blog>(x => true);
                blog_specification_factory.Stub(x => x.GetLatestBlogSpecification()).Return(the_latest_blogs_specification);
            };

        Because of = () => result = subject.GetLatestBlogs();

        It should_ask_the_blog_specification_factory_for_the_latest_blog_specification = () => blog_specification_factory.AssertWasCalled(x => x.GetLatestBlogSpecification());

        It should_return_latest_blogs = () => result.ShouldBeTheSameAs(the_latest_blogs);
    }

    public class when_the_blog_tasks_is_asked_to_get_a_blog_by_url : context_for_blog_tasks
    {
        static string the_url;

        static ILinqSpecification<Blog> the_blog_url_specification;

        static Blog the_new_blog;

        static Blog result;

        Establish context = () =>
            {
                the_url = "new-blog";
                the_blog_url_specification = new AdHocSpecification<Blog>(x => true);
                blog_specification_factory.Stub(x => x.GetBlogUrlSpecification(the_url)).Return(the_blog_url_specification);

                the_new_blog = new Blog { Url = the_url };
                caching_provider.Stub(x => x.TryGet(the_url, () => the_new_blog)).IgnoreArguments().Return(the_new_blog);
            };

        Because of = () => result = subject.GetBlog(the_url);

        It should_ask_the_blog_specification_factory_for_blog_url_specification = () => blog_specification_factory.AssertWasCalled(x => x.GetBlogUrlSpecification(the_url));

        It should_return_the_blog_from_the_repository = () => result.ShouldBeTheSameAs(the_new_blog);
    }
}