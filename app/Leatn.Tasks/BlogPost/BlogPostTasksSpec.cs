// -------------------------------------------------------------------------------------------------
// <auto-generated>    
//  Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
// -------------------------------------------------------------------------------------------------
namespace Leatn.Tasks.BlogPost
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    using Domain.Blog.BlogPost;
    using Domain.Contracts.Repositories;
    using Domain.Contracts.Specifications;

    using Factories.Contracts;

    using Framework.Contracts.Specifications;

    using Machine.Specifications;
    using Machine.Specifications.AutoMocking.Rhino;

    using Rhino.Mocks;

    using Web.Mvc.Caching.Contracts;

    public abstract class context_for_blog_post_tasks : Specification<BlogPostTasks>
    {
        protected static IBlogPostSpecificationFactory the_blog_post_specification_factory;

        protected static ICachingProvider the_caching_provider;

        Establish context = () =>
            {
                the_blog_post_specification_factory = DependencyOf<IBlogPostSpecificationFactory>();
                the_caching_provider = DependencyOf<ICachingProvider>();
            };
    }

    public class when_the_blog_tasks_is_asked_to_get_the_latest_blog_posts : context_for_blog_post_tasks
    {
        static ILinqSpecification<BlogPost> the_late_blog_post_specification;

        static IQueryable<BlogPost> result;

        static IQueryable<BlogPost> the_latest_blog_posts;

        Establish context = () =>
            {
                the_late_blog_post_specification = new AdHocSpecification<BlogPost>(x => true, string.Empty);
                the_blog_post_specification_factory.Stub(x => x.GetLatestBlogPostSpecificaiton()).Return(
                    the_late_blog_post_specification);

                the_latest_blog_posts = new List<BlogPost>().AsQueryable();

                the_caching_provider.Stub(
                    x => x.TryGet(the_late_blog_post_specification.CacheKey, () => the_latest_blog_posts))
                    .IgnoreArguments()
                    .Return(the_latest_blog_posts);
            };

        Because     of = () =>
            {
                result = subject.GetLatestBlogPosts();
            };

        It should_ask_the_blog_post_specification_factory_for_the_lates_blog_post_specification = () => the_blog_post_specification_factory.AssertWasCalled(x => x.GetLatestBlogPostSpecificaiton());

        It should_return_the_latest_blog_posts = () => result.ShouldBeTheSameAs(the_latest_blog_posts);
    }
}